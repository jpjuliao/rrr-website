import Head from 'next/head'
import { InferGetServerSidePropsType } from 'next'
import { GetServerSideProps } from 'next'
import WeatherInfo from '@/components/WeatherInfo'
import Footer from '@/components/Footer'

type Data = {
  map: any
}

type GeocoderData = {
  input: { address: { address: string } }
}

export const getServerSideProps: GetServerSideProps<{ periods: Data, geocoder: GeocoderData }> = async (context) => {
  const params = context.params
  const address = params ? params.address : ''
  const addressUri = typeof address === 'string' ? encodeURI(address) : ''
  const geocoder_response = await fetch(process.env.HOST + 'api/geocoder/' + addressUri)
  const geocoder = await geocoder_response.json()
  if (typeof geocoder.addressMatches[0] === 'undefined') {
    return {
      redirect: {
        permanent: false,
        destination: '/?error=true',
      }
    }
  }
  const coordinates = [
    geocoder.addressMatches[0].coordinates.y,
    geocoder.addressMatches[0].coordinates.x
  ].join(',')
  const weather_response = await fetch(process.env.HOST + 'api/weather/' + coordinates)
  const data = await weather_response.json()
  const periods = data.properties.periods
  return {
    props: {
      periods,
      geocoder
    },
  }
}

export default function Home({ periods, geocoder }: InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <>
      <Head>
        <title>Weather Forecast</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='flex flex-col h-screen justify-between'>
        <h1 className='text-center p-8'>Weather Forecast</h1>
        <div className='text-center text-xl'>Address found: <strong>{geocoder.input.address.address}.</strong>
        </div>
        <main className="container m-auto p-4">
          <ul id="weather-data" className="grid md:grid-cols-7 grid-cols-1 md:gap-2 gap-4 max-w-[850px] m-auto">
            {periods.map((item: any, key: number) => (
              <li key={key} className="">
                <WeatherInfo item={item} />
              </li>
            ))}
          </ul>
          <div className="px-4 py-3 text-center sm:px-6 mt-10">
            <button onClick={_ => window.location.href = "/"} className="inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">New Search</button>
          </div>
        </main>
        <Footer />
      </div>
    </>
  )
}
